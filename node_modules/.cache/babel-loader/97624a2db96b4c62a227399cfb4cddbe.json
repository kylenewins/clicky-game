{"ast":null,"code":"import _classCallCheck from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport cards from \"../../cards.json\";\nimport Card from \"../Card\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardContainer, _React$Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: cards,\n      score: 0,\n      topScore: 0,\n      message: \"\"\n    };\n\n    _this.handleClick = function (id, clicked) {\n      var imageOrder = _this.state.images;\n\n      if (clicked) {\n        imageOrder.forEach(function (image, index) {\n          imageOrder[index].clicked = false;\n        });\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Sorry, try again!\",\n          score: 0\n        });\n      } else {\n        imageOrder.forEach(function (image, index) {\n          if (id === image.id) {\n            imageOrder[index].clicked = true;\n          }\n        });\n        var _this$state = _this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n        var newScore = score + 1;\n        var newTopScore = newScore > topScore ? newScore : topScore;\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Awesome, you got it!\",\n          score: newScore,\n          topScore: newTopScore\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.images.map(function (single) {\n        return React.createElement(Card // shuffle={this.shuffle}\n        , {\n          clicked: false,\n          clickHandle: _this2.handleClick,\n          id: single.id,\n          shuffle: _this2.shuffle,\n          key: single.id,\n          name: single.name,\n          image: single.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CardContainer;\n}(React.Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js"],"names":["React","Wrapper","cards","Card","CardContainer","state","images","score","topScore","message","handleClick","id","clicked","imageOrder","forEach","image","index","setState","sort","Math","random","newScore","newTopScore","map","single","shuffle","name","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAGMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACRC,MAAAA,MAAM,EAAEJ,KADA;AAERK,MAAAA,KAAK,EAAC,CAFE;AAGRC,MAAAA,QAAQ,EAAE,CAHF;AAIRC,MAAAA,OAAO,EAAE;AAJD,K;;UAOVC,W,GAAc,UAACC,EAAD,EAAKC,OAAL,EAAiB;AAE/B,UAAMC,UAAU,GAAG,MAAKR,KAAL,CAAWC,MAA9B;;AAEA,UAAIM,OAAJ,EAAa;AACZC,QAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpCH,UAAAA,UAAU,CAACG,KAAD,CAAV,CAAkBJ,OAAlB,GAA4B,KAA5B;AACA,SAFD;AAGA,eAAO,MAAKK,QAAL,CAAc;AACpBF,UAAAA,KAAK,EAAEF,UAAU,CAACK,IAAX,CAAgB;AAAA,mBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,WAAhB,CADa;AAEpBX,UAAAA,OAAO,EAAE,mBAFW;AAGpBF,UAAAA,KAAK,EAAE;AAHa,SAAd,CAAP;AAKA,OATD,MAUK;AACJM,QAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpC,cAAIL,EAAE,KAAKI,KAAK,CAACJ,EAAjB,EAAqB;AACpBE,YAAAA,UAAU,CAACG,KAAD,CAAV,CAAkBJ,OAAlB,GAA4B,IAA5B;AACA;AACD,SAJD;AADI,0BAOwB,MAAKP,KAP7B;AAAA,YAOIG,QAPJ,eAOIA,QAPJ;AAAA,YAOcD,KAPd,eAOcA,KAPd;AAQJ,YAAMc,QAAQ,GAAGd,KAAK,GAAG,CAAzB;AACA,YAAMe,WAAW,GAAGD,QAAQ,GAAGb,QAAX,GAAsBa,QAAtB,GAAiCb,QAArD;AAEA,eAAO,MAAKS,QAAL,CAAc;AACpBF,UAAAA,KAAK,EAAEF,UAAU,CAACK,IAAX,CAAgB;AAAA,mBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,WAAhB,CADa;AAEpBX,UAAAA,OAAO,EAAE,sBAFW;AAGpBF,UAAAA,KAAK,EAAEc,QAHa;AAIpBb,UAAAA,QAAQ,EAAEc;AAJU,SAAd,CAAP;AAMA;AACD,K;;;;;;;6BAGY;AAAA;;AACN,aAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsB,UAAAC,MAAM;AAAA,eAC3B,oBAAC,IAAD,CACA;AADA;AAEA,UAAA,OAAO,EAAE,KAFT;AAGA,UAAA,WAAW,EAAE,MAAI,CAACd,WAHlB;AAIA,UAAA,EAAE,EAAEc,MAAM,CAACb,EAJX;AAKA,UAAA,OAAO,EAAE,MAAI,CAACc,OALd;AAMA,UAAA,GAAG,EAAED,MAAM,CAACb,EANZ;AAOA,UAAA,IAAI,EAAEa,MAAM,CAACE,IAPb;AAQA,UAAA,KAAK,EAAEF,MAAM,CAACT,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2B;AAAA,OAA5B,CADH,CAFF;AAiBH;;;;EA7DuBf,KAAK,CAAC2B,S;;AAgEhC,eAAevB,aAAf","sourcesContent":["import React from \"react\"\nimport Wrapper from \"../Wrapper\"\nimport cards from \"../../cards.json\"\nimport Card from \"../Card\"\n\n\nclass CardContainer extends React.Component{\n    state = {\n    images: cards,\n    score:0,\n    topScore: 0,\n    message: \"\"\n  }\n  \n  handleClick = (id, clicked) => {\n\n\t\tconst imageOrder = this.state.images;\n\n\t\tif (clicked) {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\timageOrder[index].clicked = false;\n\t\t\t});\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Sorry, try again!\",\n\t\t\t\tscore: 0\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\tif (id === image.id) {\n\t\t\t\t\timageOrder[index].clicked = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { topScore, score } = this.state;\n\t\t\tconst newScore = score + 1;\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\n\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Awesome, you got it!\",\n\t\t\t\tscore: newScore,\n\t\t\t\ttopScore: newTopScore,\n\t\t\t})\n\t\t}\n\t};\n\n  \n      render(){\n        return(\n    \n          <Wrapper>\n            {this.state.images.map(single=> (\n              <Card\n              // shuffle={this.shuffle}\n              clicked={false}\n              clickHandle={this.handleClick}\n              id={single.id}\n              shuffle={this.shuffle}\n              key={single.id}\n              name={single.name}\n              image={single.image}\n              />\n            ))}\n          </Wrapper>\n        )\n    }\n  }\n\n  export default CardContainer"]},"metadata":{},"sourceType":"module"}