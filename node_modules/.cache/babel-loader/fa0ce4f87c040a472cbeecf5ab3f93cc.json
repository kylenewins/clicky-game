{"ast":null,"code":"import _defineProperty from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport cards from \"../../cards.json\";\nimport Card from \"../Card\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardContainer, _React$Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: cards,\n      count: 0\n    };\n\n    _this.handleClick = function (id, clicked) {\n      var imageOrder = _this.state.images;\n\n      if (clicked) {\n        imageOrder.forEach(function (image, index) {\n          imageOrder[index].clicked = false;\n        });\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Sorry, try again!\",\n          score: 0\n        });\n      } else {\n        imageOrder.forEach(function (image, index) {\n          if (id === image.id) {\n            imageOrder[index].clicked = true;\n          }\n        });\n        var _this$state = _this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n        var newScore = score + 1;\n        var newTopScore = newScore > topScore ? newScore : topScore;\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Awesome, you got it!\",\n          score: newScore,\n          topScore: newTopScore\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.images.map(function (single) {\n        var _React$createElement;\n\n        return React.createElement(Card // shuffle={this.shuffle}\n        , (_React$createElement = {\n          clickHandle: _this2.clickHandle,\n          key: single.id,\n          shuffle: _this2.shuffle\n        }, _defineProperty(_React$createElement, \"key\", single.id), _defineProperty(_React$createElement, \"name\", single.name), _defineProperty(_React$createElement, \"image\", single.image), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement));\n      }));\n    }\n  }]);\n\n  return CardContainer;\n}(React.Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js"],"names":["React","Wrapper","cards","Card","CardContainer","state","images","count","handleClick","id","clicked","imageOrder","forEach","image","index","setState","sort","Math","random","message","score","topScore","newScore","newTopScore","map","single","clickHandle","shuffle","name","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAGMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACRC,MAAAA,MAAM,EAAEJ,KADA;AAERK,MAAAA,KAAK,EAAC;AAFE,K;;UAKVC,W,GAAc,UAACC,EAAD,EAAKC,OAAL,EAAiB;AAE/B,UAAMC,UAAU,GAAG,MAAKN,KAAL,CAAWC,MAA9B;;AAEA,UAAII,OAAJ,EAAa;AACZC,QAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpCH,UAAAA,UAAU,CAACG,KAAD,CAAV,CAAkBJ,OAAlB,GAA4B,KAA5B;AACA,SAFD;AAGA,eAAO,MAAKK,QAAL,CAAc;AACpBF,UAAAA,KAAK,EAAEF,UAAU,CAACK,IAAX,CAAgB;AAAA,mBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,WAAhB,CADa;AAEpBC,UAAAA,OAAO,EAAE,mBAFW;AAGpBC,UAAAA,KAAK,EAAE;AAHa,SAAd,CAAP;AAKA,OATD,MAUK;AACJT,QAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpC,cAAIL,EAAE,KAAKI,KAAK,CAACJ,EAAjB,EAAqB;AACpBE,YAAAA,UAAU,CAACG,KAAD,CAAV,CAAkBJ,OAAlB,GAA4B,IAA5B;AACA;AACD,SAJD;AADI,0BAOwB,MAAKL,KAP7B;AAAA,YAOIgB,QAPJ,eAOIA,QAPJ;AAAA,YAOcD,KAPd,eAOcA,KAPd;AAQJ,YAAME,QAAQ,GAAGF,KAAK,GAAG,CAAzB;AACA,YAAMG,WAAW,GAAGD,QAAQ,GAAGD,QAAX,GAAsBC,QAAtB,GAAiCD,QAArD;AAEA,eAAO,MAAKN,QAAL,CAAc;AACpBF,UAAAA,KAAK,EAAEF,UAAU,CAACK,IAAX,CAAgB;AAAA,mBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,WAAhB,CADa;AAEpBC,UAAAA,OAAO,EAAE,sBAFW;AAGpBC,UAAAA,KAAK,EAAEE,QAHa;AAIpBD,UAAAA,QAAQ,EAAEE;AAJU,SAAd,CAAP;AAMA;AACD,K;;;;;;;6BAGY;AAAA;;AACN,aAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlB,KAAL,CAAWC,MAAX,CAAkBkB,GAAlB,CAAsB,UAAAC,MAAM;AAAA;;AAAA,eAC3B,oBAAC,IAAD,CACA;AADA;AAEA,UAAA,WAAW,EAAE,MAAI,CAACC,WAFlB;AAGA,UAAA,GAAG,EAAED,MAAM,CAAChB,EAHZ;AAIA,UAAA,OAAO,EAAE,MAAI,CAACkB;AAJd,wDAKKF,MAAM,CAAChB,EALZ,iDAMMgB,MAAM,CAACG,IANb,kDAOOH,MAAM,CAACZ,KAPd;AAAA;AAAA;AAAA,yFAD2B;AAAA,OAA5B,CADH,CAFF;AAgBH;;;;EA1DuBb,KAAK,CAAC6B,S;;AA6DhC,eAAezB,aAAf","sourcesContent":["import React from \"react\"\nimport Wrapper from \"../Wrapper\"\nimport cards from \"../../cards.json\"\nimport Card from \"../Card\"\n\n\nclass CardContainer extends React.Component{\n    state = {\n    images: cards,\n    count:0,\n  }\n  \n  handleClick = (id, clicked) => {\n\n\t\tconst imageOrder = this.state.images;\n\n\t\tif (clicked) {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\timageOrder[index].clicked = false;\n\t\t\t});\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Sorry, try again!\",\n\t\t\t\tscore: 0\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\tif (id === image.id) {\n\t\t\t\t\timageOrder[index].clicked = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { topScore, score } = this.state;\n\t\t\tconst newScore = score + 1;\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\n\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Awesome, you got it!\",\n\t\t\t\tscore: newScore,\n\t\t\t\ttopScore: newTopScore,\n\t\t\t})\n\t\t}\n\t};\n\n  \n      render(){\n        return(\n    \n          <Wrapper>\n            {this.state.images.map(single=> (\n              <Card\n              // shuffle={this.shuffle}\n              clickHandle={this.clickHandle}\n              key={single.id}\n              shuffle={this.shuffle}\n              key={single.id}\n              name={single.name}\n              image={single.image}\n              />\n            ))}\n          </Wrapper>\n        )\n    }\n  }\n\n  export default CardContainer"]},"metadata":{},"sourceType":"module"}