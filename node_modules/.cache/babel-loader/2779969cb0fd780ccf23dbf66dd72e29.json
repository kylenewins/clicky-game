{"ast":null,"code":"import _classCallCheck from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport cards from \"../../cards.json\";\nimport Card from \"../Card\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardContainer, _React$Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: cards,\n      clickedArray: [],\n      score: 0,\n      topScore: 0,\n      message: \"\"\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          highscore: _this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      _this.state.images.forEach(function (card) {\n        card.count = 0;\n      });\n\n      alert(\"Game Over :( \\nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.handleClick = function (id, clicked) {\n      var imageOrder = _this.state.images;\n      console.log(_this.state.message);\n\n      if (clicked) {\n        imageOrder.forEach(function (image, index) {\n          imageOrder[index].clicked = false;\n        });\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Sorry, try again!\",\n          score: 0\n        });\n      } else {\n        imageOrder.forEach(function (image, index) {\n          if (id === image.id) {\n            imageOrder[index].clicked = true;\n          }\n        });\n        var _this$state = _this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n        var newScore = score + 1;\n        var newTopScore = newScore > topScore ? newScore : topScore;\n        return _this.setState({\n          image: imageOrder.sort(function () {\n            return Math.random() - 0.5;\n          }),\n          message: \"Awesome, you got it!\",\n          score: newScore,\n          topScore: newTopScore\n        });\n      }\n    };\n\n    _this.shuffleArray = function (picturesArray) {\n      for (var i = picturesArray.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [picturesArray[j], picturesArray[i]];\n        picturesArray[i] = _ref[0];\n        picturesArray[j] = _ref[1];\n      }\n\n      return picturesArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.images.map(function (single) {\n        return React.createElement(Card // shuffle={this.shuffle}\n        , {\n          clicked: false,\n          clickHandle: _this2.handleClick,\n          id: single.id,\n          shuffle: _this2.shuffle,\n          key: single.id,\n          name: single.name,\n          image: single.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return CardContainer;\n}(React.Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js"],"names":["React","Wrapper","Header","cards","Card","CardContainer","state","images","clickedArray","score","topScore","message","gameOver","setState","highscore","console","log","forEach","card","count","alert","handleClick","id","clicked","imageOrder","image","index","sort","Math","random","newScore","newTopScore","shuffleArray","picturesArray","i","length","j","floor","map","single","shuffle","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Wrapper from \"../Wrapper\"\nimport Header from \"../Header\"\nimport cards from \"../../cards.json\"\nimport Card from \"../Card\"\n\n\nclass CardContainer extends React.Component{\n    state = {\n    images: cards,\n    clickedArray: [],\n    score:0,\n    topScore: 0,\n    message: \"\"\n  }\n\n  gameOver = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.images.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n  \n  handleClick = (id, clicked) => {\n\t\tconst imageOrder = this.state.images;\n    console.log(this.state.message)\n\n\t\tif (clicked) {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\timageOrder[index].clicked = false;\n\t\t\t});\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Sorry, try again!\",\n        score: 0\n      })\n    }\n    \n\t\telse {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\tif (id === image.id) {\n\t\t\t\t\timageOrder[index].clicked = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { topScore, score } = this.state;\n\t\t\tconst newScore = score + 1;\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\n\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"Awesome, you got it!\",\n\t\t\t\tscore: newScore,\n\t\t\t\ttopScore: newTopScore,\n      })\n    }\n  };\n  \n  shuffleArray = (picturesArray) => {\n    for (let i = picturesArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\n    }\n    return picturesArray;\n}\n\n  \n      render(){\n        return(\n          <div>\n            <Header score={this.state.score} topScore={this.state.topScore} message = {this.state.message}/>\n            <Wrapper>\n            {this.state.images.map(single=> (\n              <Card\n              // shuffle={this.shuffle}\n              clicked = {false}\n              clickHandle={this.handleClick}\n              id={single.id}\n              shuffle={this.shuffle}\n              key={single.id}\n              name={single.name}\n              image={single.image}\n              />\n            ))}\n          </Wrapper>\n          </div>\n         \n        )\n    }\n  }\n\n  export default CardContainer"]},"metadata":{},"sourceType":"module"}