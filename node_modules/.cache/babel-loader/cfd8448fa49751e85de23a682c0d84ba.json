{"ast":null,"code":"import _classCallCheck from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport cards from \"../../cards.json\";\nimport Card from \"../Card\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardContainer, _React$Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: cards,\n      clickedArray: [],\n      score: 0,\n      topScore: 0,\n      message: \"\"\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          topScore: _this.state.score\n        }, function () {\n          console.log(this.state.topScore);\n        });\n      }\n\n      _this.state.cards.forEach(function (card) {\n        card.count = 0;\n      });\n\n      alert(\"Game Over :( \\nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.handleClick = function (id) {\n      var shuffledArray = _this.shuffleArray(cards);\n\n      _this.setState({\n        cards: shuffledArray\n      });\n\n      if (_this.state.clickedArray.includes(id)) {\n        _this.setState({\n          score: 0,\n          clickedArray: [],\n          message: \"Game Over, You Clicked that already!\"\n        });\n      } else {\n        _this.setState({\n          clickedArray: _this.state.clickedArray.concat([id]),\n          score: _this.state.score + 1,\n          message: \"Correct!\"\n        });\n      }\n\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          topScore: _this.state.score\n        });\n      }\n    };\n\n    _this.shuffleArray = function (picturesArray) {\n      for (var i = picturesArray.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [picturesArray[j], picturesArray[i]];\n        picturesArray[i] = _ref[0];\n        picturesArray[j] = _ref[1];\n      }\n\n      return picturesArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.cards.map(function (single) {\n        return React.createElement(Card // shuffle={this.shuffle}\n        , {\n          clicked: false,\n          clickHandle: _this2.handleClick,\n          id: single.id,\n          shuffle: _this2.shuffle,\n          key: single.id,\n          name: single.name,\n          image: single.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return CardContainer;\n}(React.Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/kyle4dc/Desktop/CODING_BOOTCAMP/weeks19-20-react/clicky-game/src/components/CardContainer/index.js"],"names":["React","Wrapper","Header","cards","Card","CardContainer","state","clickedArray","score","topScore","message","gameOver","setState","console","log","forEach","card","count","alert","handleClick","id","shuffledArray","shuffleArray","includes","concat","picturesArray","i","length","j","Math","floor","random","map","single","shuffle","name","image","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Wrapper from \"../Wrapper\"\nimport Header from \"../Header\"\nimport cards from \"../../cards.json\"\nimport Card from \"../Card\"\n\n\nclass CardContainer extends React.Component{\n    state = {\n    cards,\n    clickedArray: [],\n    score:0,\n    topScore: 0,\n    message: \"\"\n  }\n\n  gameOver = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score}, function() {\n        console.log(this.state.topScore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n  \n  handleClick = (id) => {\n     const shuffledArray = this.shuffleArray(cards);\n     this.setState({cards: shuffledArray});\n\n     if (this.state.clickedArray.includes(id)) {\n       this.setState({ score: 0, clickedArray: [], message: \"Game Over, You Clicked that already!\"});\n     }\n     else {\n       this.setState({\n         clickedArray: this.state.clickedArray.concat([id]),\n         score: this.state.score + 1,\n         message: \"Correct!\",\n       });\n     }\n     if (this.state.score > this.state.topScore) {\n       this.setState({ topScore: this.state.score });\n     }\n  };\n  \n  shuffleArray = (picturesArray) => {\n    for (let i = picturesArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\n    }\n    return picturesArray;\n}\n\n  \n      render(){\n        return(\n          <div>\n            <Header score={this.state.score} topScore={this.state.topScore} message = {this.state.message}/>\n            <Wrapper>\n            {this.state.cards.map(single=> (\n              <Card\n              // shuffle={this.shuffle}\n              clicked = {false}\n              clickHandle={this.handleClick}\n              id={single.id}\n              shuffle={this.shuffle}\n              key={single.id}\n              name={single.name}\n              image={single.image}\n              />\n            ))}\n          </Wrapper>\n          </div>\n         \n        )\n    }\n  }\n\n  export default CardContainer"]},"metadata":{},"sourceType":"module"}